@page "/Feriado/feriado"

@inject MudBlazor.IDialogService MudDialog
@inherits OwningComponentBase<Service.ServiceFeriado>

<div class="container">
    <br />
    <MudFab Color="Color.Primary" Icon="@Icons.Material.Filled.Add" aria-label="Adicionar" OnClick="@Novo" />
    <p></p>
    <RadzenFieldset Text="Cadastro feriado">
        <RadzenDataGrid @ref="grid" Data="@feriados" TItem="@Data.Feriado" AllowFiltering="true" AllowSorting="true" AllowPaging="true" PageSize="10" 
            FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterMode="FilterMode.Advanced">
            <Columns>
                <RadzenDataGridColumn TItem="Data.Feriado" Property="DataFeriado" FormatString="{0:dd/MM/yyyy}" Title="Data" Width="80px"/>
                <RadzenDataGridColumn TItem="Data.Feriado" Property="Descricao" Title="Descrição" Width="200px"/>
                <RadzenDataGridColumn TItem="Data.Feriado" Title="Altereção" Width="80px">
                    <Template>
                        <MudIconButton Icon="@Icons.Material.Filled.Edit" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" OnClick="@(()=>Editar(context.Id))"></MudIconButton>
                        <MudIconButton Icon="@Icons.Material.Filled.Delete" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Small" OnClick="@(()=>Apagar(context))"></MudIconButton>
                    </Template>
                </RadzenDataGridColumn>
            </Columns>

        </RadzenDataGrid>
    </RadzenFieldset>
</div>

@code 
{
    RadzenDataGrid<Data.Feriado> grid;
    List<Feriado> feriados;

    protected override async void OnInitialized()
    {
        base.OnInitialized();
        if (feriados is null)
        {
            feriados = await Service.GetFeriadoAll();
        }
    }

    void Novo()
    {
        Editar(Guid.Empty);
    }

   async void Editar(Guid id)
    {
        MudBlazor.DialogOptions opt = new MudBlazor.DialogOptions()
        {
            CloseButton=true,
            NoHeader=false,
            MaxWidth = MaxWidth.Medium
        };

        var dialog = MudDialog.Show<FeriadoDetails>("", new DialogParameters() { ["FeridoId"] = id });
        var result = await dialog.Result;
    }

    async void Apagar(Feriado f)
    {
        bool? result = await MudDialog.ShowMessageBox("Atenção", "Deseja Excluir o registro atual?", yesText: "Sim", cancelText: "Não");
        if (result == true)
        {
            Service.ExcluiFeriado(f);
        }
    }
}
