
@using BlazorServer.Service
@using BlazorServer.Data
@using System.ComponentModel.DataAnnotations
@using System.IO
@using System.Net.Http.Headers

@inject MudBlazor.DialogService DialogService
@*@inject Service.RegistroPontoService Service*@
@inherits OwningComponentBase<Service.RegistroPontoService>

<div class="container">
         <MudDialog>
            <DialogContent>
                <EditForm Model="@registroPonto" OnValidSubmit="Success">
                        <div class="row">
                        <h2>Edição de ponto</h2>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col">
                            <h6>Entrada manhã</h6>
                            <RadzenDatePicker TValue="DateTime" @bind-Value="registroPonto.AM_ENT" ShowTime="true" TimeOnly="true" DateFormat="HH:mm"/> 
                        </div>
                        <div class="col">
                            <h6>Entrada tarde</h6>
                            <RadzenDatePicker TValue="DateTime" @bind-Value="registroPonto.PM_ENT" ShowTime="true" TimeOnly="true" DateFormat="HH:mm"/>
                        </div>
                        <div class="col">
                            <h6>Entrada noite</h6>
                            <RadzenDatePicker TValue="DateTime" @bind-Value="registroPonto.NOI_ENT" ShowTime="true" TimeOnly="true" DateFormat="HH:mm"/>
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col">
                            <h6>Saída manhã</h6>
                            <RadzenDatePicker TValue="DateTime" @bind-Value="registroPonto.AM_SAI" ShowTime="true" TimeOnly="true" DateFormat="HH:mm"/>
                        </div>
                        <div class="col">
                            <h6>Saída tarde</h6>
                            <RadzenDatePicker TValue="DateTime" @bind-Value="registroPonto.PM_SAI" ShowTime="true" TimeOnly="true" DateFormat="HH:mm"/>
                        </div>
                        <div class="col">
                            <h6>Saída noite</h6>
                            <RadzenDatePicker TValue="DateTime" @bind-Value="registroPonto.NOI_SAI" ShowTime="true" TimeOnly="true" DateFormat="HH:mm"/>
                        </div>
                    </div>
                    <br />
                    <div class="row"><h6>Total de Horas: @registroPonto.TotalHorasDia</h6></div>
                </EditForm>
            </DialogContent>
            <DialogActions>
                <MudButton OnClick="Cancel">Cancelar</MudButton>
                <MudButton OnClick="OkClick">Salvar</MudButton>
            </DialogActions>
        </MudDialog>
</div>



@code 
{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public RegistroPonto registroPonto { get; set; }

    [Parameter] public Guid registroPontoGuid { get; set; }

    protected override void OnInitialized()
    {
        registroPonto = new RegistroPonto();     
        if (registroPontoGuid != Guid.Empty)
        {
            registroPonto = Service.GetRecord(registroPontoGuid);
        }
    }

    void Success()
    { 
    }

    void Cancel()
    {
        MudDialog.Cancel();
    }

    void OkClick()
    {
        try
        {
            Service.UpdateRecord(registroPonto);
            MudDialog.Close(DialogResult.Ok(registroPonto));
        }
        catch(Exception ex)
        {
            throw ex;
        }
    }

}
