@page "/gerenciaColaborador/{ColaboradorID}"

@inherits OwningComponentBase
@*@inject Data*@


<div class="container">
    <div class="row">
        <br />
    </div>
    <div class="row">
            <RadzenDataGrid  IsLoading=@isLoading Count=@count Data="@listPontos" TItem="Data.RegistroPonto" FilterMode="FilterMode.Advanced" 
                FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowSorting="true" AllowFiltering="true" AllowPaging="true" PageSize="30" AllowColumnResize="true" Style="border-radius: 6px;">
                <Columns>
                    <RadzenDataGridColumn TItem="Data.RegistroPonto" Property="DiaSemanaPtBr" Title="Dia semana" Width="90px"/>
                    <RadzenDataGridColumn TItem="Data.RegistroPonto" Property="Data" Title="Data" Width="80px" FormatString="{0:dd/MM/yyyy}"/>
                    <RadzenDataGridColumn TItem="Data.RegistroPonto" Property="AM_ENT" Title="AM_ENT" FormatString="{0:HH:mm}"   Width="50px"/>
                    <RadzenDataGridColumn TItem="Data.RegistroPonto" Property="AM_SAI" Title="AM_SAI" FormatString="{0:HH:mm}"   Width="50px"/>
                    <RadzenDataGridColumn TItem="Data.RegistroPonto" Property="PM_ENT" Title="PM_ENT" FormatString="{0:HH:mm}"   Width="50px"/>
                    <RadzenDataGridColumn TItem="Data.RegistroPonto" Property="PM_SAI" Title="PM_SAI" FormatString="{0:HH:mm}"   Width="50px"/>
                    <RadzenDataGridColumn TItem="Data.RegistroPonto" Property="NOI_ENT" Title="NOI_ENT" FormatString="{0:HH:mm}"  Width="50px"/>
                    <RadzenDataGridColumn TItem="Data.RegistroPonto" Property="NOI_SAI" Title="NOI_SAI" FormatString="{0:HH:mm}"  Width="50px"/>
                    <RadzenDataGridColumn TItem="Data.RegistroPonto" Property="TotalHorasDia" Title="Total Horas Dia"  Width="60px"/> 
                </Columns>
            </RadzenDataGrid>
    </div>
</div>

@code {

    [Parameter]
    public string ColaboradorID { get; set; }

    private Guid guidColaboradorId;

    Data.Colaborador colaborador{ get; set; }

    List<Data.Cargo> cargos { get; set; }

    IEnumerable<Data.RegistroPonto> listPontos { get; set; }

    Service.ColaboradorService _colaboradorService;
    Service.CargoService _cargoService;
    Service.RegistroPontoService _registroPontoService;

    //IEnumerable<Data.Colaborador> _colaboradores;

    bool editCodigo;
    int count;
    bool isLoading;

    protected override void OnInitialized()
    {
        isLoading = true;
        guidColaboradorId = Guid.Parse(ColaboradorID);
        _colaboradorService = (ColaboradorService)ScopedServices.GetService(typeof(ColaboradorService));
        _cargoService = (CargoService)ScopedServices.GetService(typeof(CargoService));
        _registroPontoService = (RegistroPontoService)ScopedServices.GetService(typeof(RegistroPontoService));
        cargos = _cargoService.GetAllRecords().Result;

        if (guidColaboradorId!= Guid.Empty)
        {
            colaborador = _colaboradorService.GetColaboradorById(guidColaboradorId).Result;
            listPontos = _registroPontoService.GetRegistroPontoByColaborador(colaborador).Result;
        }
        isLoading = false;
    }

    void Submit()
    { }

    void OnChange(object value, string name)
    {
        if(name=="DropDown")
        {
            Data.Cargo c = (Data.Cargo)value;
            colaborador.Cargo = c; // cargos.FirstOrDefault(i => i.Id == c.Id);;
        }
    }
}